[MULTILINE_PARSER]
    name          spark_yarn_log
    type          regex
    flush_timeout 1000
    rule          "start_state"  "^\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} "  "cont"
    rule          "start_state"  ".*Traceback \(most recent call last\):"  "cont"
    rule          "cont"         "^(?!\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} |.*Traceback \(most recent call last\):).*"  "cont"
    # rule          "cont"         "^(?!\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} ).*"  "cont"

# rule "start_state" "^\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} " "cont":
# 로그의 시작을 나타내는 정규식입니다.
# 예: 24/05/15 13:45:12 ...
# 이 패턴이 나오면 새로운 로그의 시작으로 간주하고, 다음 상태는 "cont"로 이동합니다.

# rule "cont" "^(?!\d{2}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} ).*" "cont":
# 시작 패턴이 아닌 줄(즉, 이전 줄의 연속인 줄)을 계속 "cont" 상태로 묶습니다.
# 즉, 타임스탬프로 시작하지 않는 줄은 이전 로그의 일부로 간주합니다.

[MULTILINE_PARSER]
    name          hive_metastore_log
    type          regex
    flush_timeout 1000
    rule "start_state" "/^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2},\d{3}|\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}:)/" "cont"
    rule "cont"        "/^(?!(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2},\d{3}|\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}:)).*/" "cont"

